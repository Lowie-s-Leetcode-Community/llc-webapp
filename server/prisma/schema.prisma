datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    Int                   @id @default(autoincrement())
  discordId             String                @unique
  leetcodeUsername      String                @unique
  userSolvedProblems    UserSolvedProblem[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  mostRecentSubId       Int
  userDailyObjects      UserDailyObject[]
  userMonthlyObjects    UserMonthlyObject[]
}

model Problem {
  id                    Int                   @id @default(autoincrement())
  userSolvedProblems    UserSolvedProblem[]
  dailyObjects          DailyObject[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  title                 String
  titleSlug             String
  difficulty            String
  isPremium             Boolean
  topics                Topic[]
  missions              Mission[]
}

model UserSolvedProblem {
  id                    Int                   @id @default(autoincrement())
  submissionId          Int
  problemId             Int
  problem               Problem               @relation(fields: [problemId], references: [id])
  userId                Int
  user                  User                  @relation(fields: [userId], references: [id])
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
}

model Topic {
  id                    Int                   @id @default(autoincrement())
  topicName             String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  problems              Problem[]
}

model DailyObject {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  problemId             Int
  problem               Problem               @relation(fields: [problemId], references: [id])
  isToday               Boolean
  generatedDate         DateTime              @db.Date
  userDailyObjects      UserDailyObject[]
}

model UserDailyObject {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  userId                Int
  user                  User                  @relation(fields: [userId], references: [id])
  dailyObjectId         Int
  dailyObject           DailyObject           @relation(fields: [dailyObjectId], references: [id])
}

model UserMonthlyObject {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  userId                Int
  user                  User                  @relation(fields: [userId], references: [id])
  scoreEarned           Int
  firstDayOfMonth       DateTime              @db.Date
}

model Mission {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  problems              Problem[]
  isHidden              Boolean
  rewardImageURL        String?
}

model DiscordQuiz {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  category              String
  question              String
  difficulty            String
  correctAnswerId       Int
  discordQuizAnswer     DiscordQuizAnswer[]
}

model DiscordQuizAnswer {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  answer                String
  discordQuizId         Int
  discordQuiz           DiscordQuiz           @relation(fields: [discordQuizId], references: [id])
}

model SystemConfiguration {
  id                    Int                   @id @default(autoincrement())
  serverId              Int
  verifiedRoleId        Int
  trackingChannelId     Int
  scoreLogChannelId     Int
  dailyThreadChannelId  Int
  lastDailyCheck        DateTime
  feedbackChannelId     Int
  qaChannelId           Int
  eventChannelId        Int
  timeBeforeKick        Int
  unverifiedRoleId      Int
  backupChannelId       Int
}
